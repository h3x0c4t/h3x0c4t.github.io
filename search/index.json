[{"content":"До автоматизации Создаем новый проект: hugo new \u0026lt;название\u0026gt;\nНа GitHub создаем репозиторий с названием \u0026lt;username\u0026gt;.github.io\nДля того, чтобы дальше все проходило без ошибок, убедитесь что у настроены SSH ключи на GitHub. Как это сделать описано здесь\nДалее в папке с проектом выполняем команды:\n1 2 3 4 5 6 git init git add . git commit -m \u0026#34;First commit\u0026#34; git branch -M main git remote add origin \u0026lt;SSH ссылка на ваш репозиторий\u0026gt; git push -u origin main После этого в вашем репозитории должен появиться проект.\nАвтоматизация Для автоматизации создадим файл .github/workflows/gh-pages.yml с содержимым:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 name: GitHub Pages on: push: branches: - main # Ветка, при пуше в которую будет запускаться деплой pull_request: jobs: deploy: runs-on: ubuntu-22.04 permissions: contents: write concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;0.109.0\u0026#34; # Версия Hugo extended: true # Если вам нужна extended версия Hugo - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 # Если вы используете другую ветку, то измените # `main` на вашу ветку в `refs/heads/main` ниже. if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public Теперь, при каждом коммите в ветку main будет запускаться автоматизация, которая соберет проект и запушит его в ветку gh-pages.\nЗапушим новый файл в репозиторий:\n1 2 3 git add . git commit -m \u0026#34;Add GitHub Actions\u0026#34; git push После этого, в разделе Actions должен появиться новый воркфлоу, а в ветке gh-pages должен появиться собранный проект.\nТеперь, нужно перейти в настройки репозитория и в разделе Pages выбрать ветку gh-pages и папку / (root).\nПосле сохранения с айт будет доступен по адресу \u0026lt;username\u0026gt;.github.io.\nДополнительно Добавление своего домена Для того, чтобы добавить свой домен, нужно создать файл CNAME в папке static с содержимым:\n1 \u0026lt;your-domain\u0026gt; Пушим изменения в репозиторий:\n1 2 3 git add . git commit -m \u0026#34;Add CNAME\u0026#34; git push Затем, нужно добавить следующие A записи в DNS:\n1 2 3 4 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 Также, нужно добавить следующие CNAME записи в DNS:\n1 \u0026lt;username\u0026gt;.github.io Через некоторое время, сайт будет доступен по вашему домену.\nЧтобы принудительного включения HTTPS, ставим галочку Enforce HTTPS в настройках репозитория.\nДобавление сабдомена Если же вы хотите чтобы сайт был доступен по сабдомену, то также нужно создаем файл CNAME в папке static с содержимым:\n1 \u0026lt;subdomain\u0026gt;.\u0026lt;your-domain\u0026gt; Пушим изменения в репозиторий:\n1 2 3 git add . git commit -m \u0026#34;Add CNAME\u0026#34; git push Затем, в панели управления доменом добавляем CNAME запись в DNS:\n1 \u0026lt;username\u0026gt;.github.io Через некоторое время, сайт будет доступен по сабдомену.\n","date":"2023-01-07T00:00:00Z","image":"https://h3x0c4t.github.io/p/hugo-github-actions/cover_hu20607d8d08849faa0da8610b91d92596_22960_120x120_fill_box_smart1_3.png","permalink":"https://h3x0c4t.github.io/p/hugo-github-actions/","title":"Автоматизация Hugo с GitHub Actions"}]